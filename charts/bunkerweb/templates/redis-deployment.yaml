{{- if .Values.redis.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-{{ include "bunkerweb.fullname" . }}
  namespace: {{ include "bunkerweb.namespace" . }}
  labels:
    {{- include "bunkerweb.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "bunkerweb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bunkerweb.labels" . | nindent 8 }}
        bunkerweb.io/component: "redis"
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: Always
          {{- with .Values.redis.resources }}
          resources:
            {{- toYaml . | nindent 12}}
          {{- end }}
          args: ["--requirepass", "$(REDIS_PASSWORD)"]
          {{- if .Values.redis.useConfigFile }}
          command: ["redis-server", "/etc/redis/redis.conf"]
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
          {{- else }}
          command: ["redis-server"]
          {{- end }}
          env:
            - name: REDIS_PASSWORD
              {{- if not (empty .Values.settings.existingSecret) }}
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.settings.existingSecret }}"
                  key: redis-password
              {{- else }}
              value: "{{ .Values.redis.config.password }}"
              {{- end }}       
      {{- if .Values.redis.useConfigFile }}
      volumes:
        - name: redis-config
          configMap:
            name: redis-config-{{ include "bunkerweb.fullname" . }}
      {{- end }}
      {{- if .Values.redis.podAnnotations }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}