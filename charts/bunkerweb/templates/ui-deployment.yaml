{{- if .Values.ui.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-{{ include "bunkerweb.fullname" . }}
  namespace: {{ include "bunkerweb.namespace" . }}
  labels:
    {{- include "bunkerweb.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "bunkerweb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bunkerweb.labels" . | nindent 8 }}
        {{- with .Values.ui.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        bunkerweb.io/component: "ui"
    spec:
      containers:
        - name: bunkerweb-ui
          image: {{ .Values.ui.repository }}:{{ .Values.ui.tag }}
          imagePullPolicy: {{ .Values.ui.pullPolicy }}
          {{- with .Values.ui.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12}}
          {{- end }}
          env:
            - name: DATABASE_URI
              {{- if not (empty .Values.settings.existingSecret) }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.settings.existingSecret }}
                  key: database-uri
              {{- else }}
              value: "{{ include "bunkerweb.databaseUri" . }}"
              {{- end }}
            - name: ADMIN_USERNAME
              {{- if not (empty .Values.settings.existingSecret) }}
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.settings.existingSecret }}"
                  key: admin-username
              {{- else }}
              value: "{{ .Values.settings.ui.adminUsername }}"
              {{- end }}
            - name: ADMIN_PASSWORD
              {{- if not (empty .Values.settings.existingSecret) }}
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.settings.existingSecret }}"
                  key: admin-password
              {{- else }}
              value: "{{ .Values.settings.ui.adminPassword }}"
              {{- end }}
            - name: TOTP_SECRETS
              {{- if not (empty .Values.settings.existingSecret) }}
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.settings.existingSecret }}"
                  key: totp-secrets
              {{- else }}
              value: "{{ .Values.settings.ui.totpSecrets }}"
              {{- end }}
            - name: FLASK_SECRET
              {{- if not (empty .Values.settings.existingSecret) }}
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.settings.existingSecret }}"
                  key: flask-secret
              {{- else }}
              value: "{{ .Values.settings.ui.flaskSecret }}"
              {{- end }}
            - name: OVERRIDE_ADMIN_CREDS
              value: "{{ .Values.settings.ui.overrideAdminCreds }}"
            {{- if .Values.ui.extraEnvs }}
              {{- toYaml .Values.ui.extraEnvs | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}