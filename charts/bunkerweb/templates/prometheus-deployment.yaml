{{- if .Values.prometheus.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-{{ include "bunkerweb.fullname" . }}
  namespace: {{ include "bunkerweb.namespace" . }}
  labels:
    {{- include "bunkerweb.labels" . | nindent 4 }}
spec:
	replicas: 1
	strategy:
		type: Recreate
	selector:
    matchLabels:
      {{- include "bunkerweb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bunkerweb.labels" . | nindent 8 }}
        {{- with .Values.prometheus.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        bunkerweb.io/component: "prometheus"
		spec:
			containers:
				- name: prometheus
					image: {{ .Values.prometheus.repository }}:{{ .Values.prometheus.tag }}
					imagePullPolicy: IfNotPresent
					args:
						- "--config.file=/etc/prometheus/prometheus.yml"
						- "--storage.tsdb.path=/prometheus"
						- "--web.console.libraries=/usr/share/prometheus/console_libraries"
						- "--web.console.templates=/usr/share/prometheus/consoles"
					ports:
						- containerPort: 9090
						  name: web
					volumeMounts:
						- name: config-volume
						  mountPath: /etc/prometheus/
						- name: data
						  mountPath: /prometheus
			volumes:
				- name: config-volume
				  configMap:
					name: prometheus-config
				- name: data
				  emptyDir: {}
{{- end }}
